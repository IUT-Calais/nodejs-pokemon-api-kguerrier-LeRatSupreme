openapi: 3.0.0
info:
  title: API de gestion des cartes Pokémon et des utilisateurs
  description: API permettant de gérer les cartes Pokémon et les utilisateurs.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Serveur local

paths:
  /pokemons-cards:
    get:
      summary: Récupérer toutes les cartes Pokémon
      responses:
        '200':
          description: Liste des cartes Pokémon
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PokemonCard'
        '500':
          description: Erreur interne du serveur
    post:
      summary: Créer une nouvelle carte Pokémon
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PokemonCardInput'
      responses:
        '201':
          description: Carte Pokémon créée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PokemonCard'
        '400':
          description: Champs requis manquants
        '500':
          description: Erreur interne du serveur

  /pokemons-cards/{pokemonCardId}:
    get:
      summary: Récupérer une carte Pokémon par ID
      parameters:
        - name: pokemonCardId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Carte Pokémon trouvée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PokemonCard'
        '400':
          description: ID invalide
        '404':
          description: Carte Pokémon non trouvée
        '500':
          description: Erreur interne du serveur
    patch:
      summary: Mettre à jour une carte Pokémon par ID
      security:
        - bearerAuth: []
      parameters:
        - name: pokemonCardId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PokemonCardInput'
      responses:
        '200':
          description: Carte Pokémon mise à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PokemonCard'
        '400':
          description: Champs requis manquants ou ID invalide
        '500':
          description: Erreur interne du serveur
    delete:
      summary: Supprimer une carte Pokémon par ID
      security:
        - bearerAuth: []
      parameters:
        - name: pokemonCardId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Carte Pokémon supprimée
        '400':
          description: ID invalide
        '500':
          description: Erreur interne du serveur

  /users:
    post:
      summary: Créer un nouvel utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: Utilisateur créé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Champs requis manquants ou utilisateur existant
        '500':
          description: Erreur interne du serveur

  /users/login:
    post:
      summary: Connexion d'un utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Connexion réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '400':
          description: Champs requis manquants ou mot de passe incorrect
        '404':
          description: Utilisateur non trouvé
        '500':
          description: Erreur interne du serveur

components:
  schemas:
    PokemonCard:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        pokedexId:
          type: integer
        typeId:
          type: integer
        lifePoints:
          type: integer
        size:
          type: number
          nullable: true
        weight:
          type: number
          nullable: true
        imageUrl:
          type: string
          nullable: true
    PokemonCardInput:
      type: object
      required:
        - name
        - pokedexId
        - type
        - lifePoints
      properties:
        name:
          type: string
        pokedexId:
          type: integer
        type:
          type: integer
        lifePoints:
          type: integer
        size:
          type: number
          nullable: true
        weight:
          type: number
          nullable: true
        imageUrl:
          type: string
          nullable: true
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        password:
          type: string
    UserInput:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT